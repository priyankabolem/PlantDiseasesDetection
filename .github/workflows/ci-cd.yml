name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements-dev.txt
        pip list
    
    - name: Lint with flake8
      run: |
        # Stop build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.git,__pycache__,venv
        # Check all style issues
        flake8 . --count --max-line-length=120 --exclude=.git,__pycache__,venv --statistics
    
    - name: Format check with black
      run: |
        black --check .
    
    - name: Test imports
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}"
        python tests/test_imports.py
    
    - name: Run tests
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}"
        pytest tests/test_model.py -v --cov=src --cov-report=xml -s --tb=short
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy-huggingface:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true
        fetch-depth: 0
    
    - name: Push to Hugging Face
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        git remote add hf https://HF_TOKEN:$HF_TOKEN@huggingface.co/spaces/Priyabolem/plant-disease-detection
        git push hf main --force

  # Docker build job - uncomment and add secrets if needed
  # build-docker:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       lfs: true
  #   
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #   
  #   - name: Log in to Docker Hub
  #     uses: docker/login-action@v2
  #     with:
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
  #   
  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v4
  #     with:
  #       context: .
  #       push: true
  #       tags: |
  #         ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:latest
  #         ${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:${{ github.sha }}
  #       cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:buildcache
  #       cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/plant-disease-detector:buildcache,mode=max